/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.text.DecimalFormat;
import java.util.HashMap;
import java.util.Map;

/**
 *
 * @author MINEDUCYT
 */
public class Conversor extends javax.swing.JFrame {

    private static final Map<Integer, Double> unidadMedidas = new HashMap<>();
    private static final Map<Integer, Double> unidadPeso = new HashMap<>();

   static {
    unidadMedidas.put(1, 0.000000001);    // Nanómetro
    unidadMedidas.put(2, 0.000001);       // Micrómetro
    unidadMedidas.put(3, 0.001);          // Milímetro
    unidadMedidas.put(4, 0.01);           // Centímetro
    unidadMedidas.put(5, 0.0833);         // Svara (aproximado)
    unidadMedidas.put(6, 0.0254);         // Pulgada
    unidadMedidas.put(7, 0.004233);       // Pica
    unidadMedidas.put(8, 0.3048);         // Pie
    unidadMedidas.put(9, 0.4572);         // Codo
    unidadMedidas.put(10, 0.9144);        // Yarda
    unidadMedidas.put(11, 1.0);           // Metro
    unidadMedidas.put(12, 2.4384);        // Braza
    unidadMedidas.put(13, 10.0);          // Decámetro
    unidadMedidas.put(14, 100.0);         // Hectómetro
    unidadMedidas.put(15, 201.168);       // Furlong
    unidadMedidas.put(16, 1067.0);        // Versta
    unidadMedidas.put(17, 1000.0);        // Kilómetro
    unidadMedidas.put(18, 1609.344);      // Milla terrestre
    unidadMedidas.put(19, 1609.344);      // Milla
    unidadMedidas.put(20, 0.0254);        // Mil (milésima de pulgada)
    unidadMedidas.put(21, 1852.0);        // Milla náutica
    unidadMedidas.put(22, 4828.032);      // Liga
    unidadMedidas.put(23, 5556.0);        // League (marítima)
    unidadMedidas.put(24, 9.461e15);      // Año luz
}

static {
    unidadPeso.put(1, 0.00000000003527396);       // Picogramo (pg)
    unidadPeso.put(2, 0.00000003527396);          // Nanogramo (ng)
    unidadPeso.put(3, 0.00003527396);             // Microgramo (µg)
    unidadPeso.put(4, 0.00003527396);             // Miligramo (mg)
    unidadPeso.put(5, 0.0022046226218);           // Gramo (g)
    unidadPeso.put(6, 0.0000000022046226218);     // Microtonelada
    unidadPeso.put(7, 0.0000022046226218);        // Militonelada
    unidadPeso.put(8, 1.0);                       // Libra (lb) - unidad base
    unidadPeso.put(9, 2.2046226218);              // Kilogramo (kg)
    unidadPeso.put(10, 2.2046226218);             // Libra métrica (kg)
    unidadPeso.put(11, 25.0);                     // Arroba
    unidadPeso.put(12, 100.0);                    // Quintal corto (cwt)
    unidadPeso.put(13, 1102.311);                 // Media tonelada (half ton)
    unidadPeso.put(14, 2000.0);                   // Tonelada corta (short ton)
    unidadPeso.put(15, 2204.6226218);             // Tonelada métrica (t)
    unidadPeso.put(16, 2240.0);                   // Tonelada larga (long ton)
    unidadPeso.put(17, 35273.96195);              // Tonelada
    unidadPeso.put(18, 220462.2622);              // Kilotonelada (kt)
    unidadPeso.put(19, 2204622.6218);             // Megatonelada (Mt)
    unidadPeso.put(20, 22046226.218);             // Gigatonelada (Gt)
    unidadPeso.put(21, 220462262.18);             // Teratonelada (Tt)
    unidadPeso.put(22, 2204622621.8);             // Petatonelada (Pt)
    unidadPeso.put(23, 22046226218.0);            // Exatonelada (Et)
}

    public Conversor() {
        initComponents();

        setResizable(false);
        setTitle("Conversor");
        this.setLocationRelativeTo(null);

        Medidas.setVisible(true);
        Pesos.setVisible(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Medidas = new javax.swing.JPanel();
        CmbDestinoM = new javax.swing.JComboBox<>();
        CmbOrigenM = new javax.swing.JComboBox<>();
        TxtOrigenM = new javax.swing.JTextField();
        TxtDestinoM = new javax.swing.JTextField();
        Pesos = new javax.swing.JPanel();
        CmbDestinoP = new javax.swing.JComboBox<>();
        CmbOrigenP = new javax.swing.JComboBox<>();
        TxtOrigenP = new javax.swing.JTextField();
        TxtDestinoP = new javax.swing.JTextField();
        BtnPesos = new javax.swing.JButton();
        BtnMedidas = new javax.swing.JButton();
        BtnVolver1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CmbDestinoM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nanómetro (1 × 10^-9 m)", "Micrómetro (1 × 10^-6 m)", "Milímetro (0.001 m)", "Centímetro (0.01 m)", "Svara (métrica) (0.025 m)", "Pulgada (0.0254 m)", "Pica (0.004217 m)", "Pie (0.3048 m)", "Codo (0.4572 m)", "Yarda (0.9144 m)", "Metro (1 m)", "Braza (1.8288 m)", "Decámetro (10 m)", "Hectómetro (100 m)", "Furlong (201.168 m)", "Versta (1.0668 × 10^3 m)", "Kilómetro (1 × 10^3 m)", "Milla terrestre (1.609 × 10^3 m)", "Milla (1.609 × 10^3 m)", "Milha (mil) (1.609 × 10^3 m)", "Milla náutica (1.852 × 10^3 m)", "Liga (4.828 × 10^6 m)", "League (marítima) (5.556 × 10^6 m)", "Año luz (9.461 × 10^15 m)" }));
        CmbDestinoM.setSelectedIndex(3);
        CmbDestinoM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbDestinoMItemStateChanged(evt);
            }
        });

        CmbOrigenM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nanómetro (1 × 10^-9 m)", "Micrómetro (1 × 10^-6 m)", "Milímetro (0.001 m)", "Centímetro (0.01 m)", "Svara (métrica) (0.025 m)", "Pulgada (0.0254 m)", "Pica (0.004217 m)", "Pie (0.3048 m)", "Codo (0.4572 m)", "Yarda (0.9144 m)", "Metro (1 m)", "Braza (1.8288 m)", "Decámetro (10 m)", "Hectómetro (100 m)", "Furlong (201.168 m)", "Versta (1.0668 × 10^3 m)", "Kilómetro (1 × 10^3 m)", "Milla terrestre (1.609 × 10^3 m)", "Milla (1.609 × 10^3 m)", "Milha (mil) (1.609 × 10^3 m)", "Milla náutica (1.852 × 10^3 m)", "Liga (4.828 × 10^6 m)", "League (marítima) (5.556 × 10^6 m)", "Año luz (9.461 × 10^15 m)" }));
        CmbOrigenM.setSelectedIndex(3);
        CmbOrigenM.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbOrigenMItemStateChanged(evt);
            }
        });

        TxtOrigenM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtOrigenMKeyReleased(evt);
            }
        });

        TxtDestinoM.setEditable(false);

        javax.swing.GroupLayout MedidasLayout = new javax.swing.GroupLayout(Medidas);
        Medidas.setLayout(MedidasLayout);
        MedidasLayout.setHorizontalGroup(
            MedidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedidasLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MedidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtOrigenM)
                    .addComponent(CmbDestinoM, 0, 457, Short.MAX_VALUE)
                    .addComponent(TxtDestinoM))
                .addContainerGap())
            .addGroup(MedidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MedidasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CmbOrigenM, 0, 457, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        MedidasLayout.setVerticalGroup(
            MedidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MedidasLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(TxtOrigenM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(CmbDestinoM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(TxtDestinoM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(MedidasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(MedidasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CmbOrigenM, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(236, Short.MAX_VALUE)))
        );

        getContentPane().add(Medidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, 292));

        CmbDestinoP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Picogramo (0.00000000003527396 lbs)", "Nanogramo (0.00000003527396 lbs)", "Microgramo (0.00003527396 lbs)", "Miligramo (0.00003527396 lbs)", "Gramo (0.0022046226218 lbs)", "Microtonelada (0.0000000022046226218 lbs)", "Militonelada (0.0000022046226218 lbs)", "Libra (1.0 lbs)", "Kilogramo (2.2046226218 lbs)", "Libra métrica (2.2046226218 lbs)", "Arroba (25.0 lbs)", "Quintal corto (100.0 lbs)", "Media tonelada (1102.311 lbs)", "Tonelada corta (2000.0 lbs)", "Tonelada métrica (2204.6226218 lbs)", "Tonelada larga (2240.0 lbs)", "Tonelada (35273.96195 lbs)", "Kilotonelada (220462.2622 lbs)", "Megatonelada (2204622.6218 lbs)", "Gigatonelada (22046226.218 lbs)", "Teratonelada (220462262.18 lbs)", "Petatonelada (2204622621.8 lbs)", "Exatonelada (22046226218.0 lbs)" }));
        CmbDestinoP.setSelectedIndex(7);
        CmbDestinoP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbDestinoPItemStateChanged(evt);
            }
        });

        CmbOrigenP.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Picogramo (0.00000000003527396 lbs)", "Nanogramo (0.00000003527396 lbs)", "Microgramo (0.00003527396 lbs)", "Miligramo (0.00003527396 lbs)", "Gramo (0.0022046226218 lbs)", "Microtonelada (0.0000000022046226218 lbs)", "Militonelada (0.0000022046226218 lbs)", "Libra (1.0 lbs)", "Kilogramo (2.2046226218 lbs)", "Libra métrica (2.2046226218 lbs)", "Arroba (25.0 lbs)", "Quintal corto (100.0 lbs)", "Media tonelada (1102.311 lbs)", "Tonelada corta (2000.0 lbs)", "Tonelada métrica (2204.6226218 lbs)", "Tonelada larga (2240.0 lbs)", "Tonelada (35273.96195 lbs)", "Kilotonelada (220462.2622 lbs)", "Megatonelada (2204622.6218 lbs)", "Gigatonelada (22046226.218 lbs)", "Teratonelada (220462262.18 lbs)", "Petatonelada (2204622621.8 lbs)", "Exatonelada (22046226218.0 lbs)" }));
        CmbOrigenP.setSelectedIndex(7);
        CmbOrigenP.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                CmbOrigenPItemStateChanged(evt);
            }
        });

        TxtOrigenP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtOrigenPKeyReleased(evt);
            }
        });

        TxtDestinoP.setEditable(false);

        javax.swing.GroupLayout PesosLayout = new javax.swing.GroupLayout(Pesos);
        Pesos.setLayout(PesosLayout);
        PesosLayout.setHorizontalGroup(
            PesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PesosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TxtOrigenP)
                    .addComponent(CmbDestinoP, 0, 457, Short.MAX_VALUE)
                    .addComponent(TxtDestinoP))
                .addContainerGap())
            .addGroup(PesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PesosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CmbOrigenP, 0, 457, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        PesosLayout.setVerticalGroup(
            PesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PesosLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(TxtOrigenP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(CmbDestinoP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(TxtDestinoP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(PesosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PesosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(CmbOrigenP, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(236, Short.MAX_VALUE)))
        );

        getContentPane().add(Pesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, 292));

        BtnPesos.setText("Pesos");
        BtnPesos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPesosActionPerformed(evt);
            }
        });
        getContentPane().add(BtnPesos, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 10, -1, -1));

        BtnMedidas.setText("Medidas");
        BtnMedidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMedidasActionPerformed(evt);
            }
        });
        getContentPane().add(BtnMedidas, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        BtnVolver1.setText("Volver");
        BtnVolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolver1ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnVolver1, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 10, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CmbOrigenMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbOrigenMItemStateChanged
        conversorMedidas();
    }//GEN-LAST:event_CmbOrigenMItemStateChanged

    private void CmbDestinoMItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbDestinoMItemStateChanged
        conversorMedidas();
    }//GEN-LAST:event_CmbDestinoMItemStateChanged

    private void TxtOrigenMKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtOrigenMKeyReleased
        conversorMedidas();
    }//GEN-LAST:event_TxtOrigenMKeyReleased

    private void CmbDestinoPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbDestinoPItemStateChanged
        conversorPesos();
    }//GEN-LAST:event_CmbDestinoPItemStateChanged

    private void CmbOrigenPItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_CmbOrigenPItemStateChanged
        conversorPesos();
    }//GEN-LAST:event_CmbOrigenPItemStateChanged

    private void TxtOrigenPKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtOrigenPKeyReleased
        conversorPesos();
    }//GEN-LAST:event_TxtOrigenPKeyReleased

    private void BtnMedidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMedidasActionPerformed
        Medidas.setVisible(true);
        Pesos.setVisible(false);
        Reinicio();
    }//GEN-LAST:event_BtnMedidasActionPerformed

    private void BtnPesosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPesosActionPerformed
        Medidas.setVisible(false);
        Pesos.setVisible(true);
        Reinicio();
    }//GEN-LAST:event_BtnPesosActionPerformed

    private void BtnVolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolver1ActionPerformed
        new  Inicio().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnVolver1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conversor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conversor().setVisible(true);
            }
        });
    }

    public void Reinicio(){
        // Medidas
        TxtOrigenM.setText("");
        TxtDestinoM.setText("");
        CmbOrigenM.setSelectedIndex(3);
        CmbDestinoM.setSelectedIndex(3);
        
        // Pesos
        TxtOrigenP.setText("");
        TxtDestinoP.setText("");
        CmbOrigenP.setSelectedIndex(7);
        CmbDestinoP.setSelectedIndex(7);
    }
    
    public void conversorMedidas() {
        try {
            if (TxtOrigenM.getText().isEmpty()) {
                TxtDestinoM.setText("0");
                return;
            }
            String inputText = TxtOrigenM.getText();
            if (inputText.length() > 9) {
                TxtDestinoM.setText("El número es demasiado largo (máx. 9 dígitos).");
                return;
            }

            if (!inputText.matches("\\d+")) {
                TxtDestinoM.setText("Solo se pueden convertir números.");
                return;
            }

            int unidadOrigen = CmbOrigenM.getSelectedIndex() + 1;
            int unidadDestino = CmbDestinoM.getSelectedIndex() + 1;

            double factorOrigen = unidadMedidas.get(unidadOrigen);
            double factorDestino = unidadMedidas.get(unidadDestino);

            double resultado = (Integer.parseInt(inputText) * factorOrigen) / factorDestino;

            if (resultado == 0) {
                TxtDestinoM.setText("No se puede realizar la operación");
                return;
            }

            TxtDestinoM.setText(String.valueOf(resultado));

        } catch (NumberFormatException e) {
            TxtDestinoM.setText("Solo se pueden convertir números.");
        } catch (ArithmeticException e) {
            System.out.println("Error: División por infinito.");
        } catch (Exception e) {
            System.out.println("Ocurrió un error inesperado: " + e.getMessage());
        }
    }

    public void conversorPesos() {
        try {
            if (TxtOrigenP.getText().isEmpty()) {
                TxtDestinoP.setText("0");
                return;
            }
            String inputText = TxtOrigenP.getText();
            if (inputText.length() > 9) {
                TxtDestinoP.setText("El número es demasiado largo (máx. 9 dígitos).");
                return;
            }

            if (!inputText.matches("\\d+")) {
                TxtDestinoP.setText("Solo se pueden convertir números.");
                return;
            }

            int unidadOrigen = CmbOrigenP.getSelectedIndex() + 1;
            int unidadDestino = CmbDestinoP.getSelectedIndex() + 1;

            double factorOrigen = unidadPeso.get(unidadOrigen);
            double factorDestino = unidadPeso.get(unidadDestino);

            double resultado = (Integer.parseInt(inputText) * factorOrigen) / factorDestino;

            if (resultado == 0) {
                TxtDestinoP.setText("No se puede realizar la operación");
                return;
            }

            TxtDestinoP.setText(String.valueOf(resultado));

        } catch (NumberFormatException e) {
            TxtDestinoP.setText("Solo se pueden convertir números.");
        } catch (ArithmeticException e) {
            System.out.println("Error: División por infinito.");
        } catch (Exception e) {
            System.out.println("Ocurrió un error inesperado: " + e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnMedidas;
    private javax.swing.JButton BtnPesos;
    private javax.swing.JButton BtnVolver1;
    private javax.swing.JComboBox<String> CmbDestinoM;
    private javax.swing.JComboBox<String> CmbDestinoP;
    private javax.swing.JComboBox<String> CmbOrigenM;
    private javax.swing.JComboBox<String> CmbOrigenP;
    private javax.swing.JPanel Medidas;
    private javax.swing.JPanel Pesos;
    private javax.swing.JTextField TxtDestinoM;
    private javax.swing.JTextField TxtDestinoP;
    private javax.swing.JTextField TxtOrigenM;
    private javax.swing.JTextField TxtOrigenP;
    // End of variables declaration//GEN-END:variables

}
