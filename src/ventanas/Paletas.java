/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ventanas;

import java.awt.Color;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author MINEDUCYT
 */
public class Paletas extends javax.swing.JFrame {

    int R = 0, G = 0, B = 0;

    public Paletas() {
        initComponents();
        this.setLocationRelativeTo(null);
        setTitle("Paletas de colores");

        ImageIcon wallpaper = new ImageIcon("src/img/Paleta.jpg");
        Icon icon = new ImageIcon(wallpaper.getImage().getScaledInstance(LabelWallpaper.getWidth(),
                LabelWallpaper.getHeight(), Image.SCALE_DEFAULT));

        LabelWallpaper.setIcon(icon);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        BtnColor = new javax.swing.JButton();
        BtnColor1 = new javax.swing.JButton();
        BtnColor2 = new javax.swing.JButton();
        BtnColor3 = new javax.swing.JButton();
        BtnColor4 = new javax.swing.JButton();
        BtnColor5 = new javax.swing.JButton();
        BtnColor6 = new javax.swing.JButton();
        BtnColor7 = new javax.swing.JButton();
        BtnColor8 = new javax.swing.JButton();
        BtnColor9 = new javax.swing.JButton();
        BtnColor10 = new javax.swing.JButton();
        TxtInfoB = new javax.swing.JTextField();
        TxxtInfoR = new javax.swing.JTextField();
        TxtInfoG = new javax.swing.JTextField();
        TxtInfoHEX = new javax.swing.JTextField();
        TxtColorHex = new javax.swing.JTextField();
        TxtColorB = new javax.swing.JTextField();
        TxtColorG = new javax.swing.JTextField();
        TxtColorR = new javax.swing.JTextField();
        BtnTinte = new javax.swing.JButton();
        BtnMonoCromatico = new javax.swing.JButton();
        BtnTetradic = new javax.swing.JButton();
        BtnSquare = new javax.swing.JButton();
        BtnSombra = new javax.swing.JButton();
        BtnAnalogo = new javax.swing.JButton();
        BtnComplementario = new javax.swing.JButton();
        BtnTriadica = new javax.swing.JButton();
        BtnVolver1 = new javax.swing.JButton();
        LabelWallpaper = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BtnColor.setBackground(new java.awt.Color(255, 255, 255));
        BtnColor.setFont(new java.awt.Font("Arial Black", 1, 36)); // NOI18N
        BtnColor.setForeground(new java.awt.Color(0, 0, 0));
        BtnColor.setText("#FFFFFF");
        BtnColor.setBorder(null);
        getContentPane().add(BtnColor, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 490, 90));

        BtnColor1.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor1.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor1.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor1ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 330, 90, 90));

        BtnColor2.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor2.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor2ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 330, 90, 90));

        BtnColor3.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor3.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor3.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor3ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor3, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 330, 90, 90));

        BtnColor4.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor4.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor4.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor4ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor4, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 330, 90, 90));

        BtnColor5.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor5.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor5.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor5ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor5, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 330, 90, 90));

        BtnColor6.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor6.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor6.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor6ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 430, 90, 90));

        BtnColor7.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor7.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor7.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor7ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor7, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 430, 90, 90));

        BtnColor8.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor8.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor8.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor8ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor8, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 430, 90, 90));

        BtnColor9.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor9.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor9.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor9ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor9, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 430, 90, 90));

        BtnColor10.setBackground(new java.awt.Color(56, 56, 56));
        BtnColor10.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnColor10.setForeground(new java.awt.Color(255, 255, 255));
        BtnColor10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BtnColor10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnColor10ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnColor10, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 430, 90, 90));

        TxtInfoB.setEditable(false);
        TxtInfoB.setBackground(new java.awt.Color(51, 51, 51));
        TxtInfoB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtInfoB.setForeground(new java.awt.Color(255, 255, 255));
        TxtInfoB.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInfoB.setText("B");
        TxtInfoB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(TxtInfoB, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 230, 30, 40));

        TxxtInfoR.setEditable(false);
        TxxtInfoR.setBackground(new java.awt.Color(51, 51, 51));
        TxxtInfoR.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxxtInfoR.setForeground(new java.awt.Color(255, 255, 255));
        TxxtInfoR.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxxtInfoR.setText("R");
        TxxtInfoR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(TxxtInfoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 130, 30, 40));

        TxtInfoG.setEditable(false);
        TxtInfoG.setBackground(new java.awt.Color(51, 51, 51));
        TxtInfoG.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtInfoG.setForeground(new java.awt.Color(255, 255, 255));
        TxtInfoG.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInfoG.setText("G");
        TxtInfoG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(TxtInfoG, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, 30, 40));

        TxtInfoHEX.setEditable(false);
        TxtInfoHEX.setBackground(new java.awt.Color(51, 51, 51));
        TxtInfoHEX.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtInfoHEX.setForeground(new java.awt.Color(255, 255, 255));
        TxtInfoHEX.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        TxtInfoHEX.setText("HEX");
        TxtInfoHEX.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        getContentPane().add(TxtInfoHEX, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 280, 50, 40));

        TxtColorHex.setBackground(new java.awt.Color(56, 56, 56));
        TxtColorHex.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtColorHex.setForeground(new java.awt.Color(255, 255, 255));
        TxtColorHex.setText("#FFFFFF");
        TxtColorHex.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TxtColorHex.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtColorHexKeyReleased(evt);
            }
        });
        getContentPane().add(TxtColorHex, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 280, 80, 40));

        TxtColorB.setBackground(new java.awt.Color(56, 56, 56));
        TxtColorB.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtColorB.setForeground(new java.awt.Color(255, 255, 255));
        TxtColorB.setText("255");
        TxtColorB.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TxtColorB.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtColorBKeyReleased(evt);
            }
        });
        getContentPane().add(TxtColorB, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, 100, 40));

        TxtColorG.setBackground(new java.awt.Color(56, 56, 56));
        TxtColorG.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtColorG.setForeground(new java.awt.Color(255, 255, 255));
        TxtColorG.setText("255");
        TxtColorG.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TxtColorG.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtColorGKeyReleased(evt);
            }
        });
        getContentPane().add(TxtColorG, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, 100, 40));

        TxtColorR.setBackground(new java.awt.Color(56, 56, 56));
        TxtColorR.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        TxtColorR.setForeground(new java.awt.Color(255, 255, 255));
        TxtColorR.setText("255");
        TxtColorR.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        TxtColorR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TxtColorRKeyReleased(evt);
            }
        });
        getContentPane().add(TxtColorR, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 130, 100, 40));

        BtnTinte.setBackground(new java.awt.Color(56, 56, 56));
        BtnTinte.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnTinte.setForeground(new java.awt.Color(255, 255, 255));
        BtnTinte.setText("Tinte");
        BtnTinte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTinteActionPerformed(evt);
            }
        });
        getContentPane().add(BtnTinte, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 230, 170, 40));

        BtnMonoCromatico.setBackground(new java.awt.Color(56, 56, 56));
        BtnMonoCromatico.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnMonoCromatico.setForeground(new java.awt.Color(255, 255, 255));
        BtnMonoCromatico.setText("Monocromatico");
        BtnMonoCromatico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnMonoCromaticoActionPerformed(evt);
            }
        });
        getContentPane().add(BtnMonoCromatico, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 280, 170, 40));

        BtnTetradic.setBackground(new java.awt.Color(56, 56, 56));
        BtnTetradic.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnTetradic.setForeground(new java.awt.Color(255, 255, 255));
        BtnTetradic.setText("Pentádrico ");
        BtnTetradic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTetradicActionPerformed(evt);
            }
        });
        getContentPane().add(BtnTetradic, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 180, 170, 40));

        BtnSquare.setBackground(new java.awt.Color(56, 56, 56));
        BtnSquare.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnSquare.setForeground(new java.awt.Color(255, 255, 255));
        BtnSquare.setText("Square");
        BtnSquare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSquareActionPerformed(evt);
            }
        });
        getContentPane().add(BtnSquare, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 180, 170, 40));

        BtnSombra.setBackground(new java.awt.Color(56, 56, 56));
        BtnSombra.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnSombra.setForeground(new java.awt.Color(255, 255, 255));
        BtnSombra.setText("Sombras");
        BtnSombra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSombraActionPerformed(evt);
            }
        });
        getContentPane().add(BtnSombra, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 230, 170, 40));

        BtnAnalogo.setBackground(new java.awt.Color(56, 56, 56));
        BtnAnalogo.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnAnalogo.setForeground(new java.awt.Color(255, 255, 255));
        BtnAnalogo.setText("Analogo");
        BtnAnalogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAnalogoActionPerformed(evt);
            }
        });
        getContentPane().add(BtnAnalogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 280, 170, 40));

        BtnComplementario.setBackground(new java.awt.Color(56, 56, 56));
        BtnComplementario.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnComplementario.setForeground(new java.awt.Color(255, 255, 255));
        BtnComplementario.setText("Complementario");
        BtnComplementario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnComplementarioActionPerformed(evt);
            }
        });
        getContentPane().add(BtnComplementario, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 170, 40));

        BtnTriadica.setBackground(new java.awt.Color(56, 56, 56));
        BtnTriadica.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        BtnTriadica.setForeground(new java.awt.Color(255, 255, 255));
        BtnTriadica.setText("Triadica");
        BtnTriadica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnTriadicaActionPerformed(evt);
            }
        });
        getContentPane().add(BtnTriadica, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 130, 170, 40));

        BtnVolver1.setText("Volver");
        BtnVolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnVolver1ActionPerformed(evt);
            }
        });
        getContentPane().add(BtnVolver1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, 70, 20));
        getContentPane().add(LabelWallpaper, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 510, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TxtColorRKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtColorRKeyReleased
        actualizarRGB();
    }//GEN-LAST:event_TxtColorRKeyReleased

    private void TxtColorGKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtColorGKeyReleased
        actualizarRGB();
    }//GEN-LAST:event_TxtColorGKeyReleased

    private void TxtColorBKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtColorBKeyReleased
        actualizarRGB();
    }//GEN-LAST:event_TxtColorBKeyReleased

    private void BtnComplementarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnComplementarioActionPerformed

        ObtenerRGB();
        limpieza();
        float[] HSL = RGBToHSL(R, G, B);

        HSL[0] = (HSL[0] + 180) % 360;

        int[] RGB = HSLToRGB(HSL[0], HSL[1], HSL[2]);

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);

        setColorButton(BtnColor2, RGB[0], RGB[1], RGB[2]);
        setButtonForeground(BtnColor2, RGB[0], RGB[1], RGB[2]);

    }//GEN-LAST:event_BtnComplementarioActionPerformed

    private void BtnTriadicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTriadicaActionPerformed

        ObtenerRGB();
        limpieza();
        float[] HSL = RGBToHSL(R, G, B);

        int rotar = 360 / 3;
        HSL[0] = ciclico(HSL[0] + rotar);
        int[] RGB2 = HSLToRGB(HSL[0], HSL[1], HSL[2]);

        HSL[0] = ciclico(HSL[0] + rotar);
        int[] RGB3 = HSLToRGB(HSL[0], HSL[1], HSL[2]);

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);

        setColorButton(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);
        setButtonForeground(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);

        setColorButton(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);
        setButtonForeground(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);

    }//GEN-LAST:event_BtnTriadicaActionPerformed

    private void BtnAnalogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAnalogoActionPerformed

        ObtenerRGB();
        limpieza();
        float[] HSL = RGBToHSL(R, G, B);

        int[] RGB2 = HSLToRGB(ciclico(HSL[0] + 60), HSL[1], HSL[2]);
        int[] RGB3 = HSLToRGB(ciclico(HSL[0] + 30), HSL[1], HSL[2]);
        int[] RGB4 = HSLToRGB(ciclico(HSL[0] - 30), HSL[1], HSL[2]);
        int[] RGB5 = HSLToRGB(ciclico(HSL[0] - 60), HSL[1], HSL[2]);

        setColorButton(BtnColor1, RGB2[0], RGB2[1], RGB2[2]);
        setButtonForeground(BtnColor1, RGB2[0], RGB2[1], RGB2[2]);

        setColorButton(BtnColor2, RGB3[0], RGB3[1], RGB3[2]);
        setButtonForeground(BtnColor2, RGB3[0], RGB3[1], RGB3[2]);

        setColorButton(BtnColor3, R, G, B);
        setButtonForeground(BtnColor3, R, G, B);

        setColorButton(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);
        setButtonForeground(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);

        setColorButton(BtnColor5, RGB5[0], RGB5[1], RGB5[2]);
        setButtonForeground(BtnColor5, RGB5[0], RGB5[1], RGB5[2]);
    }//GEN-LAST:event_BtnAnalogoActionPerformed

    private void TxtColorHexKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TxtColorHexKeyReleased
        actualizarHEX();
    }//GEN-LAST:event_TxtColorHexKeyReleased

    private void BtnSombraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSombraActionPerformed
        ObtenerRGB();
        limpieza();

        float[] HSL = RGBToHSL(R, G, B);

        JButton[] botones = {BtnColor2, BtnColor3, BtnColor4, BtnColor5, BtnColor6, BtnColor7, BtnColor8, BtnColor9, BtnColor10};

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);

        float Negro = HSL[2] / botones.length;

        for (int i = 0; i < botones.length; i++) {
            HSL[2] = HSL[2] - Negro;

            if (HSL[2] < 0) {
                HSL[2] = 0;
            }

            int[] RGB = HSLToRGB(HSL[0], HSL[1], HSL[2]);

            setColorButton(botones[i], RGB[0], RGB[1], RGB[2]);
            setButtonForeground(botones[i], RGB[0], RGB[1], RGB[2]);
        }

    }//GEN-LAST:event_BtnSombraActionPerformed

    private void BtnColor1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor1ActionPerformed
        if (!BtnColor1.getText().equals("")) {
            TxtColorHex.setText(BtnColor1.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor1ActionPerformed

    private void BtnColor2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor2ActionPerformed
        if (!BtnColor2.getText().equals("")) {
            TxtColorHex.setText(BtnColor2.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor2ActionPerformed

    private void BtnColor3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor3ActionPerformed
        if (!BtnColor3.getText().equals("")) {
            TxtColorHex.setText(BtnColor3.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor3ActionPerformed

    private void BtnColor4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor4ActionPerformed
        if (!BtnColor4.getText().equals("")) {
            TxtColorHex.setText(BtnColor4.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor4ActionPerformed

    private void BtnColor5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor5ActionPerformed
        if (!BtnColor5.getText().equals("")) {
            TxtColorHex.setText(BtnColor5.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor5ActionPerformed

    private void BtnColor6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor6ActionPerformed
        if (!BtnColor6.getText().equals("")) {
            TxtColorHex.setText(BtnColor6.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor6ActionPerformed

    private void BtnSquareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSquareActionPerformed

        ObtenerRGB();
        limpieza();
        float[] HSL = RGBToHSL(R, G, B);

        int rotar = 360 / 4;
        HSL[0] = ciclico(HSL[0] + rotar);
        int[] RGB2 = HSLToRGB(HSL[0], HSL[1], HSL[2]);
        HSL[0] = ciclico(HSL[0] + rotar);
        int[] RGB3 = HSLToRGB(HSL[0], HSL[1], HSL[2]);
        HSL[0] = ciclico(HSL[0] + rotar);
        int[] RGB4 = HSLToRGB(HSL[0], HSL[1], HSL[2]);

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);

        setColorButton(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);
        setButtonForeground(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);

        setColorButton(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);
        setButtonForeground(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);

        setColorButton(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);
        setButtonForeground(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);

    }//GEN-LAST:event_BtnSquareActionPerformed

    private void BtnTinteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTinteActionPerformed
        ObtenerRGB();
        limpieza();

        float[] HSL = RGBToHSL(R, G, B);

        JButton[] botones = {BtnColor2, BtnColor3, BtnColor4, BtnColor5, BtnColor6, BtnColor7, BtnColor8, BtnColor9, BtnColor10};

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);
        float Blanco = (100 - HSL[2]) / botones.length;

        for (int i = 0; i < botones.length; i++) {
            HSL[2] = ciclico(HSL[2] + Blanco);

            if (HSL[2] > 360) {
                HSL[2] = 360;
            }

            int[] RGB = HSLToRGB(HSL[0], HSL[1], HSL[2]);

            setColorButton(botones[i], RGB[0], RGB[1], RGB[2]);
            setButtonForeground(botones[i], RGB[0], RGB[1], RGB[2]);
        }

    }//GEN-LAST:event_BtnTinteActionPerformed

    private void BtnMonoCromaticoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnMonoCromaticoActionPerformed
        ObtenerRGB();
        limpieza();

        float[] HSLTinte = RGBToHSL(R, G, B);
        float[] HSLSombra = RGBToHSL(R, G, B);

        JButton[] botonesTinte = {BtnColor5, BtnColor4, BtnColor3, BtnColor2, BtnColor1};
        JButton[] botonesSombra = {BtnColor7, BtnColor8, BtnColor9, BtnColor10};

        setColorButton(BtnColor6, R, G, B);
        setButtonForeground(BtnColor6, R, G, B);
        float Blanco = (100 - HSLTinte[2]) / botonesTinte.length;
        float Negro = HSLSombra[2] / botonesSombra.length;

        for (int i = 0; i < botonesTinte.length; i++) {
            HSLTinte[2] = ciclico(HSLTinte[2] + Blanco);

            if (HSLTinte[2] > 360) {
                HSLTinte[2] = 360;
            }

            int[] RGB = HSLToRGB(HSLTinte[0], HSLTinte[1], HSLTinte[2]);

            setColorButton(botonesTinte[i], RGB[0], RGB[1], RGB[2]);
            setButtonForeground(botonesTinte[i], RGB[0], RGB[1], RGB[2]);
        }

      for (int i = 0; i < botonesSombra.length; i++) {
            HSLSombra[2] = HSLSombra[2] - Negro;

            if (HSLSombra[2] < 0) {
                HSLSombra[2] = 0;
            }

            int[] RGB = HSLToRGB(HSLSombra[0], HSLSombra[1], HSLSombra[2]);

            setColorButton(botonesSombra[i], RGB[0], RGB[1], RGB[2]);
            setButtonForeground(botonesSombra[i], RGB[0], RGB[1], RGB[2]);
        }
    }//GEN-LAST:event_BtnMonoCromaticoActionPerformed

    private void BtnTetradicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnTetradicActionPerformed

        ObtenerRGB();
        limpieza();
        float[] HSL = RGBToHSL(R, G, B);

        int rotar = 360 / 5;
        HSL[0] = (HSL[0] + rotar) % 360;
        int[] RGB2 = HSLToRGB(HSL[0], HSL[1], HSL[2]);
        HSL[0] = (HSL[0] + rotar) % 360;
        int[] RGB3 = HSLToRGB(HSL[0], HSL[1], HSL[2]);
        HSL[0] = (HSL[0] + rotar) % 360;
        int[] RGB4 = HSLToRGB(HSL[0], HSL[1], HSL[2]);
        HSL[0] = (HSL[0] + rotar) % 360;
        int[] RGB5 = HSLToRGB(HSL[0], HSL[1], HSL[2]);

        setColorButton(BtnColor1, R, G, B);
        setButtonForeground(BtnColor1, R, G, B);

        setColorButton(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);
        setButtonForeground(BtnColor2, RGB2[0], RGB2[1], RGB2[2]);

        setColorButton(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);
        setButtonForeground(BtnColor3, RGB3[0], RGB3[1], RGB3[2]);

        setColorButton(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);
        setButtonForeground(BtnColor4, RGB4[0], RGB4[1], RGB4[2]);

        setColorButton(BtnColor5, RGB5[0], RGB5[1], RGB5[2]);
        setButtonForeground(BtnColor5, RGB5[0], RGB5[1], RGB5[2]);
    }//GEN-LAST:event_BtnTetradicActionPerformed

    private void BtnColor7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor7ActionPerformed
        if (!BtnColor7.getText().equals("")) {
            TxtColorHex.setText(BtnColor7.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor7ActionPerformed

    private void BtnColor8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor8ActionPerformed
        if (!BtnColor8.getText().equals("")) {
            TxtColorHex.setText(BtnColor8.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor8ActionPerformed

    private void BtnColor9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor9ActionPerformed
        if (!BtnColor9.getText().equals("")) {
            TxtColorHex.setText(BtnColor9.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor9ActionPerformed

    private void BtnColor10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnColor10ActionPerformed
        if (!BtnColor10.getText().equals("")) {
            TxtColorHex.setText(BtnColor10.getText());
            actualizarHEX();
        }
    }//GEN-LAST:event_BtnColor10ActionPerformed

    private void BtnVolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnVolver1ActionPerformed
        new Inicio().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BtnVolver1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Paletas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Paletas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Paletas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Paletas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Paletas().setVisible(true);
            }
        });
    }

    public static String rgbToHex(int r, int g, int b) {
        if (r < 0 || r > 255 || g < 0 || g > 255 || b < 0 || b > 255) {
            System.out.print("Los valores RGB deben estar entre 0 y 255.");
        }

        return String.format("#%02X%02X%02X", r, g, b);
    }

    public static int[] hexToRgb(String hex) {
        if (hex == null || !hex.matches("^#([A-Fa-f0-9]{6})$")) {
            throw new IllegalArgumentException("El formato del color hexadecimal debe ser #RRGGBB.");
        }

        int r = Integer.parseInt(hex.substring(1, 3), 16);
        int g = Integer.parseInt(hex.substring(3, 5), 16);
        int b = Integer.parseInt(hex.substring(5, 7), 16);

        return new int[]{r, g, b};
    }

    public static float ciclico(float input) {
        return (input + 360) % 360;
    }

    public void actualizarHEX() {
        String hexInput = TxtColorHex.getText().trim();
        if (!hexInput.startsWith("#")) {
            hexInput = "#" + hexInput;
        }

        if (hexInput.length() != 7) {
            setTitle("El código hexadecimal debe tener exactamente 6 caracteres después de '#'.");
        } else {
            try {
                setTitle("Paletas de colores");
                int[] rgb = hexToRgb(hexInput);
                TxtColorR.setText(String.valueOf(rgb[0]));
                TxtColorG.setText(String.valueOf(rgb[1]));
                TxtColorB.setText(String.valueOf(rgb[2]));
                actualizarRGB();
            } catch (IllegalArgumentException e) {
                System.out.println("Error: " + e.getMessage());
            }
        }
    }

    public void actualizarRGB() {
        int R = 0, G = 0, B = 0;

        if (!TxtColorR.getText().equals("")) {
            R = Integer.parseInt(TxtColorR.getText());
        }
        if (!TxtColorG.getText().equals("")) {
            G = Integer.parseInt(TxtColorG.getText());
        }
        if (!TxtColorB.getText().equals("")) {
            B = Integer.parseInt(TxtColorB.getText());
        }

        if (R < 0 || R > 255 || G < 0 || G > 255 || B < 0 || B > 255) {
            throw new IllegalArgumentException("Los valores RGB deben estar entre 0 y 255.");
        }

        BtnColor.setText(rgbToHex(R, G, B));
        BtnColor.setBackground(new Color(R, G, B));

        String btnText = BtnColor.getText().trim();
        String txtHex = TxtColorHex.getText().trim();

        if (!btnText.equalsIgnoreCase(txtHex)) {
            TxtColorHex.setText(btnText);
        }

        setButtonForeground(BtnColor, R, G, B);

    }

    private void setButtonForeground(JButton btn, int R, int G, int B) {
        int media = ((G * 2) + R + B) / 4;
        if (media >= 90) {
            btn.setForeground(Color.BLACK);
        } else {
            btn.setForeground(Color.WHITE);
        }
    }

    private void setColorButton(JButton btn, int R, int G, int B) {
        btn.setText(rgbToHex(R, G, B));
        btn.setBackground(new Color(R, G, B));
    }

    public void limpieza() {

        JButton[] botones = {BtnColor1, BtnColor2, BtnColor3, BtnColor4, BtnColor5, BtnColor6, BtnColor7, BtnColor8, BtnColor9, BtnColor10};

        for (JButton btn : botones) {
            btn.setForeground(Color.WHITE);
            btn.setText("");
            btn.setBackground(new Color(56, 56, 56));
        }
    }

    public static float[] RGBToHSL(int r, int g, int b) {
        float R = r / 255f;
        float G = g / 255f;
        float B = b / 255f;

        float max = Math.max(R, Math.max(G, B));
        float min = Math.min(R, Math.min(G, B));
        float delta = max - min;

        float H = 0, S = 0, L = (max + min) / 2;

        if (delta != 0) {
            if (max == R) {
                H = ((G - B) / delta) % 6;
            } else if (max == G) {
                H = ((B - R) / delta) + 2;
            } else if (max == B) {
                H = ((R - G) / delta) + 4;
            }

            H = H * 60;
            if (H < 0) {
                H += 360;
            }

            if (delta != 0) {
                if (L <= 0.5f) {
                    S = delta / (max + min);
                } else {
                    S = delta / (2 - (max + min));
                }
            }
        }

        return new float[]{H, S * 100, L * 100};
    }

    public static int[] HSLToRGB(float h, float s, float l) {
        s = s / 100;
        l = l / 100;

        float c = (1 - Math.abs(2 * l - 1)) * s;
        float x = c * (1 - Math.abs((h / 60) % 2 - 1));
        float m = l - c / 2;

        float r1 = 0, g1 = 0, b1 = 0;

        if (h >= 0 && h < 60) {
            r1 = c;
            g1 = x;
            b1 = 0;
        } else if (h >= 60 && h < 120) {
            r1 = x;
            g1 = c;
            b1 = 0;
        } else if (h >= 120 && h < 180) {
            r1 = 0;
            g1 = c;
            b1 = x;
        } else if (h >= 180 && h < 240) {
            r1 = 0;
            g1 = x;
            b1 = c;
        } else if (h >= 240 && h < 300) {
            r1 = x;
            g1 = 0;
            b1 = c;
        } else if (h >= 300 && h < 360) {
            r1 = c;
            g1 = 0;
            b1 = x;
        }

        int r = Math.round((r1 + m) * 255);
        int g = Math.round((g1 + m) * 255);
        int b = Math.round((b1 + m) * 255);

        return new int[]{r, g, b};
    }

    public void ObtenerRGB() {
        try {
            if (TxtColorR.getText().isEmpty()) {
                TxtColorR.setText("0");
                R = 0;
            }
            R = Integer.parseInt(TxtColorR.getText());
            if (R < 0 || R > 255) {
                JOptionPane.showMessageDialog(null, "ERROR: \"R\" debe estar entre 0 y 255");
                return;
            }
            if (TxtColorG.getText().isEmpty()) {
                TxtColorG.setText("0");
                G = 0;
            }
            G = Integer.parseInt(TxtColorG.getText());
            if (G < 0 || G > 255) {
                JOptionPane.showMessageDialog(null, "ERROR: \"G\" debe estar entre 0 y 255");
                return;
            }
            if (TxtColorB.getText().isEmpty()) {
                TxtColorB.setText("0");
                B = 0;
            }
            B = Integer.parseInt(TxtColorB.getText());
            if (B < 0 || B > 255) {
                JOptionPane.showMessageDialog(null, "ERROR: \"B\" debe estar entre 0 y 255");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "ERROR: Los valores deben ser numéricos");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Se produjo un error inesperado: " + e.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAnalogo;
    private javax.swing.JButton BtnColor;
    private javax.swing.JButton BtnColor1;
    private javax.swing.JButton BtnColor10;
    private javax.swing.JButton BtnColor2;
    private javax.swing.JButton BtnColor3;
    private javax.swing.JButton BtnColor4;
    private javax.swing.JButton BtnColor5;
    private javax.swing.JButton BtnColor6;
    private javax.swing.JButton BtnColor7;
    private javax.swing.JButton BtnColor8;
    private javax.swing.JButton BtnColor9;
    private javax.swing.JButton BtnComplementario;
    private javax.swing.JButton BtnMonoCromatico;
    private javax.swing.JButton BtnSombra;
    private javax.swing.JButton BtnSquare;
    private javax.swing.JButton BtnTetradic;
    private javax.swing.JButton BtnTinte;
    private javax.swing.JButton BtnTriadica;
    private javax.swing.JButton BtnVolver1;
    private javax.swing.JLabel LabelWallpaper;
    private javax.swing.JTextField TxtColorB;
    private javax.swing.JTextField TxtColorG;
    private javax.swing.JTextField TxtColorHex;
    private javax.swing.JTextField TxtColorR;
    private javax.swing.JTextField TxtInfoB;
    private javax.swing.JTextField TxtInfoG;
    private javax.swing.JTextField TxtInfoHEX;
    private javax.swing.JTextField TxxtInfoR;
    // End of variables declaration//GEN-END:variables
}
